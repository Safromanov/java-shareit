CREATE TABLE IF NOT EXISTS users
(
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name    VARCHAR(255),
    email   VARCHAR(255),
    CONSTRAINT pk_users PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS item_request
(
    item_request_id BIGINT AUTO_INCREMENT NOT NULL,
    description     VARCHAR(255),
    requestor_id    BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    created         TIMESTAMP,
    CONSTRAINT pk_itemrequest PRIMARY KEY (item_request_id)
);

CREATE TABLE items (
  item_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   name VARCHAR(255),
   description VARCHAR(255),
   available BOOLEAN NOT NULL,
   owner_id BIGINT,
   request_id BIGINT,
   CONSTRAINT pk_items PRIMARY KEY (item_id)
);

CREATE TABLE comments (
  comment_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   commentator_id BIGINT,
   text VARCHAR(255),
   item_id BIGINT,
   create_time TIMESTAMP,
   CONSTRAINT pk_comments PRIMARY KEY (comment_id)
);

CREATE TABLE items_comments (
  item_item_id BIGINT NOT NULL,
   comments_comment_id BIGINT NOT NULL
);




CREATE TABLE IF NOT EXISTS booking
(
    booking_id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    start          TIMESTAMP,
    end_booking    TIMESTAMP,
    item_id        BIGINT REFERENCES items (item_id) ON DELETE CASCADE,
    booker_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    status         VARCHAR(255),
    CONSTRAINT pk_booking PRIMARY KEY (booking_id)
);


--ALTER TABLE users ADD CONSTRAINT uc_users_email UNIQUE (email);
--
ALTER TABLE comments ADD CONSTRAINT FK_COMMENTS_ON_COMMENTATOR FOREIGN KEY (commentator_id) REFERENCES users (user_id);

ALTER TABLE comments ADD CONSTRAINT FK_COMMENTS_ON_ITEM FOREIGN KEY (item_id) REFERENCES items (item_id);

ALTER TABLE items_comments ADD CONSTRAINT uc_items_comments_comments_comment UNIQUE (comments_comment_id);

ALTER TABLE items ADD CONSTRAINT FK_ITEMS_ON_OWNER FOREIGN KEY (owner_id) REFERENCES users (user_id);

ALTER TABLE items ADD CONSTRAINT FK_ITEMS_ON_REQUEST FOREIGN KEY (request_id) REFERENCES item_request (item_request_id);

ALTER TABLE items_comments ADD CONSTRAINT fk_itecom_on_comment FOREIGN KEY (comments_comment_id) REFERENCES comments (comment_id);

ALTER TABLE items_comments ADD CONSTRAINT fk_itecom_on_item FOREIGN KEY (item_item_id) REFERENCES items (item_id);